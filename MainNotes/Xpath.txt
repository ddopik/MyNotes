Xpath set's:
-------------
$dom->loadHTML($array);    vs $dom->loadHTMLFILE($array);  ---->the first one are passed with  current value the secound one passed by url
bookstore------->Selects all nodes with the name "bookstore"
/bookstore------->Selects the root element bookstore
Note: If the path starts with a slash ( / ) it always represents an absolute path to an element!

bookstore/book------->Selects all book elements that are children of bookstore
//book------->Selects all book elements no matter where they are in the document
bookstore//book---------------------->Selects all book elements that are descendant of the bookstore element, no matter where they are under the bookstore element
//@lang------------------------------>Selects all attributes that are named lang
/bookstore/book[1]------------------->Selects the first book element that is the child of the bookstore element.
/bookstore/book[last()]-------------->Selects the last book element that is the child of the bookstore element
/bookstore/book[last()-1]------------>Selects the last but one book element that is the child of the bookstore element
/bookstore/book[position()<3]-------->Selects the first two book elements that are children of the bookstore element
//title[@lang]----------------------->Selects all the title elements that have an attribute named lang
//title[@lang='en']------------------>Selects all the title elements that have a "lang" attribute with a value of "en"
/bookstore/book[price>35.00]--------->Selects all the book elements of the bookstore element that have a price element with a value greater than 35.00
/bookstore/book[price>35.00]/title--->Selects all the title elements of the book elements of the bookstore element that have a price element with a value greater than 35.00

-----------((Selecting Unknown Nodes))
/bookstore/*------------------------->Selects all the child element nodes of the bookstore element
//*---------------------------------->Selects all elements in the document
//title[@*]-------------------------->Selects all title elements which have at least one attribute of any kind

-----------((Selecting Several Paths))
//book/title | //book/price--------->Selects all the title AND price elements of all book elements
//title | //price------------------->Selects all the title AND price elements in the document
/bookstore/book/title | //price----->Selects all the title elements of the book element of the bookstore element AND all the price elements in the document

-----------((XPath Axes))
child::book------------------------->Selects all book nodes that are children of the current node
attribute::lang--------------------->Selects the lang attribute of the current node
child::*---------------------------->Selects all element children of the current node
attribute::*------------------------>Selects all attributes of the current node
child::text()----------------------->Selects all text node children of the current node
child::node()----------------------->Selects all children of the current node
descendant::book-------------------->Selects all book descendants of the current node
ancestor::book---------------------->Selects all book ancestors of the current node
ancestor-or-self::book------------- >Selects all book ancestors of the current node - and the current as well if it is a book node
child::*/child::price



--->(|)	Computes two node-sets

1.-->/a/b/*[self::c or self::d or self::e]  all c-->b  
2.wikixml.xpath('//*[self::edition or self::edition2]/text()]
3.$nodes = $xpath->query("//ul[contains(@class,'media-list') and contains(@class ,'single-menu')]");                          /// search with multyple value for one attr
4.$nodes = $xpath->query("//select[contains(concat(' ', normalize-space(@class),'class_name'), ' media-list ')]//option");   ///search with spaces ????un tested
5.//BBB[normalize-space(@name)='bbb']                                                                                       ///that serch value with spaces
6.//Parent[@id='1']/Children/@name                                                                                         ///get attr name as with @class














#################################################################################################################################

Example:
-------------
<a>
    <b>
        <c>C1</c>
        <d>D1</d>
        <e>E1</e>
        <f>don't select this one</f>
    </b>
    <b>
        <c>C2</c>
        <d>D2</d>
        <e>E1</e>
        <g>don't select me</g>
    </b>
    <c>not this one</c>
    <d>nor this one</d>
    <e>definitely not this one</e>
</a>

1.-->/a/b/*[self::c or self::d or self::e]